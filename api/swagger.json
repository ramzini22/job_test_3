{
	"openapi": "3.0.0",
	"paths": {
		"/posts": {
			"get": {
				"operationId": "PostsController_getManyPosts",
				"summary": "",
				"description": "Getting posts by params",
				"parameters": [
					{
						"name": "offset",
						"required": false,
						"in": "query",
						"description": "Number of skipped entries per page",
						"schema": {
							"minimum": 0,
							"default": 0,
							"type": "number"
						}
					},
					{
						"name": "limit",
						"required": false,
						"in": "query",
						"description": "Number of entries per page",
						"example": 10,
						"schema": {
							"minimum": 1,
							"maximum": 100,
							"type": "number"
						}
					},
					{
						"name": "q",
						"required": false,
						"in": "query",
						"description": "Search string for title and body fields",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"meta": {
											"$ref": "#/components/schemas/MetaDto"
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/GetPostDto"
											}
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Posts"
				]
			}
		},
		"/posts/{postId}": {
			"get": {
				"operationId": "PostsController_getOnePost",
				"summary": "",
				"description": "Getting post by Id",
				"parameters": [
					{
						"name": "postId",
						"required": true,
						"in": "path",
						"description": "Unique post ID",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/GetPostDto"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Posts"
				]
			}
		},
		"/posts/users/{postId}": {
			"get": {
				"operationId": "PostsController_getUserPosts",
				"parameters": [
					{
						"name": "postId",
						"required": true,
						"in": "path",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "offset",
						"required": false,
						"in": "query",
						"description": "Number of skipped entries per page",
						"schema": {
							"minimum": 0,
							"default": 0,
							"type": "number"
						}
					},
					{
						"name": "limit",
						"required": false,
						"in": "query",
						"description": "Number of entries per page",
						"example": 10,
						"schema": {
							"minimum": 1,
							"maximum": 100,
							"type": "number"
						}
					},
					{
						"name": "q",
						"required": false,
						"in": "query",
						"description": "Search string for title and body fields",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"tags": [
					"Posts"
				]
			}
		}
	},
	"info": {
		"title": "API Documentation",
		"description": "Documentation was created for<a href='https://docs.google.com/document/d/1qL1Zsufg8dxblpj1i2EoMZ4y0M88WG9aokMYUKv5R-8/edit'> test's task</a><br/>You can find me <a href = 'https://t.me/ramzini'>here</a>",
		"version": "0.0.1",
		"contact": {
			"name": "Ramil",
			"url": "ramzini22",
			"email": "ramil.zinnatullin.02@mail.ru"
		}
	},
	"tags": [],
	"servers": [
		{
			"url": "http://localhost:3000>",
			"description": "localhost"
		}
	],
	"components": {
		"securitySchemes": {
			"bearer": {
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"type": "http"
			}
		},
		"schemas": {
			"GetPostDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number",
						"description": "Unique post ID"
					},
					"userId": {
						"type": "number",
						"description": "Unique user ID, who created a post"
					},
					"title": {
						"type": "string",
						"description": "Title of post"
					},
					"body": {
						"type": "string",
						"description": "Description of post"
					}
				},
				"required": [
					"id",
					"userId",
					"title",
					"body"
				]
			},
			"MetaDto": {
				"type": "object",
				"properties": {
					"count": {
						"type": "number",
						"description": "Number of entries per page"
					},
					"limit": {
						"type": "number",
						"description": "Number of skipped entries per page"
					},
					"offset": {
						"type": "number",
						"description": ""
					}
				},
				"required": [
					"count",
					"limit",
					"offset"
				]
			}
		}
	}
}